        -:    0:Source:unittest4.c
        -:    0:Graph:unittest4.gcno
        -:    0:Data:unittest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "utils.h"
        -:    2:#include "dominion.h"
        -:    3:
        -:    4:int testHandCard();
        -:    5:
        -:    6:/******************************************************************************
        -:    7: * UnitTest for the  function
        -:    8: *****************************************************************************/
        1:    9:int main()
        -:   10:{
        1:   11:    int total = 1, passed = 0;
        1:   12:    logV("[Starting unittest4] - Testing the  Function in Dominion.c");
        1:   13:    passed += testHandCard();
        -:   14:
        1:   15:    logV("[RESULTS unittest4] ----------------------------------------------");
        1:   16:    printResults(total, passed);
        1:   17:    logV("[Ending unittest4] - Testing the  Function in Dominion.c\n\n");
        -:   18:}
        -:   19:
        -:   20:/******************************************************************************
        -:   21: * Test that if we set the
        -:   22: *****************************************************************************/
        1:   23:int testHandCard()
        -:   24:{
        1:   25:    int total = 0, passed = 0;
        1:   26:    struct gameState *state = newGame();
        -:   27:
        5:   28:    for (int currentPlayer = 0; currentPlayer < MAX_PLAYERS; currentPlayer++)
        -:   29:    {
     2004:   30:        for (int handPos = 0; handPos < MAX_HAND; handPos++)
        -:   31:        {
        -:   32:            char message[100];
     2000:   33:            sprintf(message,
        -:   34:                    "Player %d card in position %d is 1",
        -:   35:                    currentPlayer,
        -:   36:                    handPos);
     2000:   37:            state->whoseTurn = currentPlayer;
     2000:   38:            state->hand[currentPlayer][handPos] = 1;
     2000:   39:            total++;
     2000:   40:            passed += assertTrue((handCard(handPos, state) == 1), message);
        -:   41:
        -:   42:        }
        -:   43:    }
        1:   44:    return printResults(total, passed);
        -:   45:}
